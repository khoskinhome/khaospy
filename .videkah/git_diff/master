diff --git a/.videkah/filelist/master b/.videkah/filelist/master
index 83aee30..4ac65d6 100644
--- a/.videkah/filelist/master
+++ b/.videkah/filelist/master
@@ -31,6 +31,8 @@
 
 ./install/libpy/khaospy-one-wired-daemon.py
 ./install/libpy/khaospy-one-wired-receiver-subscribe.py
+./install/libpy/khaospy-one-wired-receiver-subscribe-just-listen.py
+./install/libpy/khaospy-one-wired-receiver-subscribe-CRAP.py
 ### DEVICE = 0x20
 
 #./install/libpy/khaospy/
@@ -83,6 +85,12 @@
 
 ##############################################################################
 
+install/bin/rrdcreategraph.sh
+install/bin/rrdcreategraph.pl
+
+
+##############################################################################
+
 ./install/docs
 
 ./install/docs/dependencies.txt
@@ -91,6 +99,8 @@
 ##############################################################################
 ./perl-port/stdout-json-cfg.pl
 
+./perl-port/khaospy-pi-rest-daemon-req-resp-structure.pl
+
 
 ##############################################################################
 install-to-pi.bash
diff --git a/.videkah/runlist/master b/.videkah/runlist/master
index d7197bb..198d5f9 100644
--- a/.videkah/runlist/master
+++ b/.videkah/runlist/master
@@ -1,2 +1,3 @@
 ./install-to-pi.bash pioldwifi
+./install-to-pi.bash khaospy  
 #this script will accept a hostname get kicked off for 
diff --git a/install/libpy/khaospy-one-wired-daemon.py b/install/libpy/khaospy-one-wired-daemon.py
index d60c85b..ce06d0f 100755
--- a/install/libpy/khaospy-one-wired-daemon.py
+++ b/install/libpy/khaospy-one-wired-daemon.py
@@ -42,7 +42,8 @@ if not os.path.isdir(oneWireDir):
 
 print os.getcwd()
 
-polleveryseconds=15
+polleveryseconds=30
+#polleveryseconds=1
 lastpoll=time.time() - polleveryseconds
 
 while True:
diff --git a/install/libpy/khaospy-one-wired-receiver-subscribe.py b/install/libpy/khaospy-one-wired-receiver-subscribe.py
index a624592..7c349fc 100755
--- a/install/libpy/khaospy-one-wired-receiver-subscribe.py
+++ b/install/libpy/khaospy-one-wired-receiver-subscribe.py
@@ -4,6 +4,15 @@
 import sys
 import zmq
 
+import time
+import json
+import yaml
+import rrdtool
+
+import os.path
+
+from pprint import pprint
+
 port = "5001"
 
 # Socket to talk to server
@@ -13,6 +22,11 @@ socket = context.socket(zmq.SUB)
 print "Collecting updates from house temperature monitor server..."
 socket.connect ("tcp://pioldwifi:%s" % port)
 
+rrddatapath ='/opt/khaospy/rrd/' # make sure there is a slash on the end of this !
+if not os.path.isdir(rrddatapath) :
+    # print "no rrddatapath %s" % rrddatapath
+    raise NameError( "no rrddatapath %s" % rrddatapath )
+
 
 # Subscribe to zipcode, default is NYC, 10001
 topicfilter = "oneWireThermometer"
@@ -32,10 +46,89 @@ socket.setsockopt(zmq.SUBSCRIBE, topicfilter)
 
 # Process 5 updates
 total_value = 0
-for update_nbr in range (60):
+##for update_nbr in range (1):
+
+while (1) :
     string = socket.recv()
-    print string
-    #topic, messagedata = string.split()
-    #print topic, messagedata
+    topic, messagedata = string.split(' ', 1 )
+    sensorData = yaml.safe_load( messagedata )
+
+    #print "Address    = %s " % sensorData['OneWireAddress']
+    #print "Epoch time = %s " % sensorData['EpochTime']
+    #print "Celsius    = %s " % sensorData['Celsius']
+
+    rrdname = rrddatapath + "/" + sensorData['OneWireAddress']
+    if not os.path.isfile(rrdname):
+        print "creating rrd %s" % rrdname
+        rrdtool.create( rrdname , '--start', 'now', '--step', '60', 'DS:a:GAUGE:120:-50:50', 'RRA:AVERAGE:0.5:1:12', 'RRA:AVERAGE:0.5:1:288', 'RRA:AVERAGE:0.5:12:168', 'RRA:AVERAGE:0.5:12:720', 'RRA:AVERAGE:0.5:288:365');
+
+    iso8601time = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime( sensorData['EpochTime'] ))
+    print "update %s  %s  %s Celcius " % ( iso8601time, sensorData['OneWireAddress'],sensorData['Celsius'])
 
+    rrdtool.update( rrdname, "%s:%s" % (sensorData['EpochTime'], sensorData['Celsius'] ))
+
+    
+
+
+
+
+
+#rrds_to_filename = {
+#  "a" : "/sys/bus/w1/devices/28-011465167eff/w1_slave",
+#  "b" : "/sys/bus/w1/devices/28-021463277cff/w1_slave",
+#  "c" : "/sys/bus/w1/devices/28-02146329ceff/w1_slave",
+#  "d" : "/sys/bus/w1/devices/28-0214632d16ff/w1_slave",
+#  "e" : "/sys/bus/w1/devices/28-021463423bff/w1_slave",
+#}
+#
+#def read_temperature(file):
+#  tfile = open(file)
+#  text = tfile.read()
+#  tfile.close()
+#  lines = text.split("\n")
+#  if lines[0].find("YES") > 0:
+#    temp = float((lines[1].split(" ")[9])[2:])
+#    temp /= 1000
+#    return temp
+#  return ERROR_TEMP
+#
+#def read_all():
+#  template = ""
+#  update = "N:"
+#  for rrd in rrds_to_filename:
+#    template += "%s:" % rrd
+#    temp = read_temperature(rrds_to_filename[rrd])
+#    update += "%f:" % temp
+#  update = update[:-1]
+#  template = template[:-1]
+#  rrdtool.update(databaseFile, "--template", template, update)
+#  print databaseFile
+#  print template
+#  print update
+#
+#
+
+
+
+
+# /opt/khaospy/rrd/
+
+## rrdtool create temperature.rrd   --start now --step 60     DS:a:GAUGE:120:-50:50   RRA:AVERAGE:0.5:1:12     RRA:AVERAGE:0.5:1:288     RRA:AVERAGE:0.5:12:168     RRA:AVERAGE:0.5:12:720     RRA:AVERAGE:0.5:288:365
+
+
+
+#
+#
+#ret = rrdtool.create("example.rrd", "--step", "1800", "--start", '0',
+#    "DS:metric1:GAUGE:2000:U:U",
+#    "DS:metric2:GAUGE:2000:U:U",
+#    "RRA:AVERAGE:0.5:1:600",
+#    "RRA:AVERAGE:0.5:6:700",
+#    "RRA:AVERAGE:0.5:24:775",
+#    "RRA:AVERAGE:0.5:288:797",
+#   "RRA:MAX:0.5:1:600",
+#   "RRA:MAX:0.5:6:700",
+#   "RRA:MAX:0.5:24:775",
+#   "RRA:MAX:0.5:444:797")
+#
       
