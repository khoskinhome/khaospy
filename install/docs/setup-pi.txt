dd image on to micro-sd card.

raspi-config :
    expand the file system
    change user "pi" password
    boot option to console with password
    advanced options
        change hostname
        i2c enable
        ssh-login-enable.

    get the mac-address and add a dhcp config in the tp-link so it will always get the same ip-address.

    copy over the ssh public key, and put in .ssh/authorized_keys

    change visudo to use vim

    /boot/config.txt can need editting to get one-wire working .
    see https://www.raspberrypi.org/forums/viewtopic.php?f=37&t=98407
        http://raspberrypi.stackexchange.com/questions/26623/ds18b20-not-listed-in-sys-bus-w1-devices
    looks like i2c might need dtparam too.
    one wire needs this in the /boot/config.txt :
        dtoverlay=w1-gpio


i2c stuff :
    http://www.raspberrypi-spy.co.uk/2014/11/enabling-the-i2c-interface-on-the-raspberry-pi/
    https://www.raspberrypi.org/forums/viewtopic.php?f=44&t=91762&start=25

    getting i2c-0 working on Pi2 :
        add the kernel parm "bcm2708.vc_i2c_override=1" to /boot/cmdline.txt
        and "dtparam=i2c_vc=on" to /boot/config.txt

##############################################
/etc/fstab and usb-stick and /opt/khaospy/log
---------------------------------------------
lots of writing of logs will wear out flash cards.
So I guess its better to do this on a usb-memory-stick rather than the main Pi memory-card. ( but if the Pi is running postgres an SSD is probably needed for speed and wear-leveling stuff that goes on inside SSDs , so no point having a USB-memory-stick and SSD .... See below for postgres stuff.)

    http://www.raspberrypi-spy.co.uk/2014/05/how-to-mount-a-usb-flash-disk-on-the-raspberry-pi/

    shove in hopefully a small form factor memory stick ( so it doesn't hang out a long way )

    This will usually come up as /dev/sda1 and will be preformatted with vfat.
    I guess you could leave it as vfat, but I'd rather use ext4.


    This will list the attached disks :

    ls -l /dev/disk/by-uuid/




    sudo mkdir /media/usb
    sudo chown -R pi:pi /media/usb

    ext4
    ----
    don't really want vfat , ext4 is the linux FS, so assuming its sda1,
    make sure the drive isn't mounted, make it an ext4 partition,  :

    sudo mkfs.ext4 /dev/sda1 -L media-usb


    this should manually mount it :
        sudo mount /dev/sda1 /media/usb -t ext4


    but its much better to have it auto mounted in the /etc/fstab.

    If it's been reformatted, the uuid would have changed , so :

    ls -l /dev/disk/by-uuid/

    get the uuid , and assuming ext4, then edit the /etc/fstab, and put in the following line :

        if sda1 has been formatted to ext4 :
            UUID=<the-uuid> /media/usb ext4 auto,nofail,noatime,nodiratime,users,rw 0 0


    also needed in the fstab, if DBD::Pg is to be installed ( it uses a lot of /tmp during installation ) :
        tmpfs    /tmp    tmpfs    defaults,noatime,nosuid,size=200m    0 0

    reboot the pi , and make sure the /media/usb mounts with say :

    df -h


    getting the logs written to the /media/usb 

        sudo mkdir /media/usb/khaospy-log
        sudo chown -R pi:pi /media/usb
        sudo chown -R pi:pi /media/usb/khaospy-log/

        cd /opt/khaospy

        sudo rm -rf /opt/khaospy/log

        ln -s /media/usb/khaospy-log/ log

    Logs should now be written to /media/usb .




once fully setup "dd" the micro-sd card and get an image


##########################
setup bind9 DNS on piloft

    sudo apt-get install dnsutils bind9-doc bind9

    http://mixeduperic.com/ubuntu/seven-easy-steps-to-setting-up-an-interal-dns-server-on-ubuntu.html

    https://help.ubuntu.com/lts/serverguide/dns-installation.html

      sudo apt-get install bind9
      sudo apt-get update
      sudo apt-get install bind9
      sudo apt-get install dnsutils bind9-doc bind9
      sudo vim /etc/bind/named.conf.options
      sudo vim /etc/bind/named.conf.local
      sudo cp /etc/bind/db.local /etc/bind/db.khaos
      sudo vim /etc/bind/named.conf.local
      sudo vim /etc/bind/db.khaos
      sudo cp /etc/bind/db.127 /etc/bind/db.192
      sudo vim /etc/bind/db.192
      history
      sudo vim /etc/bind/db.192
      sudo /etc/init.d/bind9 start
      sudo vim /etc/resolv.conf
      dig distrowatch.com
      dig karlrad.khaos
      ping karlrad.khaos
      dig distrowatch.com
      ping karlrad.khaos
      dig karlrad.khaos
      ping karlrad
      history



the webserver
##############
    https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-apache-for-debian-8
    https://www.digitalocean.com/community/tutorials/how-to-create-a-ssl-certificate-on-apache-for-debian-8

# NO DON'T DO THIS :
#    in /etc/apache2/mods-available/ssl.conf change :
#        SSLProtocol all -SSLv3
#            to :
#        SSLProtocol all -TLSv1.2


    I think :
        sudo a2enmod ssl
    does the following ...

    At the command line :
        cd /etc/apache2/mods-enabled
        sudo ln -s ../mods-available/ssl.conf
        sudo ln -s ../mods-available/ssl.load



    https://piserver.khaos/phpldapadmin/cmd.php
    https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-apache-on-ubuntu-14-04
    https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-a-basic-ldap-server-on-an-ubuntu-12-04-vps

    symlinks from /var/www/


postgres db.
############


    https://www.digitalocean.com/community/tutorials/how-to-add-and-delete-users-on-an-ubuntu-14-04-vps


    but the raspbian (debian) install creates a unix 'postgres' user ( so don't need to create unix users for postgres )


    https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04

    the install/db/create-db-roles-and-tables.sql pretty much sets up the DB
    with default postgres user-roles (with "changepassword") and a Webui admin user (again with "changepassword" )

    Therefore don't need to do all of this :

        pgread
        pgwrite

            postgres@piserver:~$ createuser --interactive
            Enter name of role to add: khaospy_read
            Shall the new role be a superuser? (y/n) n
            Shall the new role be allowed to create databases? (y/n) n
            Shall the new role be allowed to create more new roles? (y/n) n

            postgres@piserver:~$ createuser --interactive
            Enter name of role to add: khaospy_write
            Shall the new role be a superuser? (y/n) n
            Shall the new role be allowed to create databases? (y/n) n
            Shall the new role be allowed to create more new roles? (y/n) n


    The postgres DB really could do with running on something other than the Pi's main memory card (it will wear it out) . A small (30GB probably) SSD connected via USB should do ...


    attach a USB-SSD, do stuff pretty similar to the section above (formatting, mounting in /etc/fstab, checking a reboot auto mounts etc ...) :
        #############################################
        /etc/fstab and usb-stick and /opt/khaospy/log
        #############################################

    stop postgres server with ( before moving the psql data to the SSD ) :

        sudo service postgresql stop

    sudo mkdir -p /media/usb_ssd/postgresql/9.4/  ( on a usb attached SSD and not on pi main sd card )

    cd /media/usb_ssd ;  sudo chown -R postgres.postgres postgresql

    cd /var/lib

    sudo mv ./postgresql/9.4/* /media/usb_ssd/postgresql/9.4/

    sudo vim /etc/postgresql/9.4/main/postgresql.conf
        and in the postgresql.conf change the line to be :
        data_directory = '/media/usb_ssd/postgresql/9.4/main'         # use data in another directory


    The  /etc/postgresql/9.4/main/pg_hba.conf will need to allow connections within the local RFC1918 network.
    (otherwise all processes, daemons, the webui that need to connect to the DB would have to be run
     on the Pi where the postgres DB is )

    So pg_hba.conf will need something like this added :

        # TYPE  DATABASE           USER            ADDRESS              METHOD
        # "local" is for Unix domain socket connections only
        local      all             postgres                             peer
        # IPv4 local connections:
        hostssl    all             all             127.0.0.1/32         md5
        hostssl    all             all             localhost            md5
        hostssl    all             all             192.168.1.0/24       md5

    The pg_hba.conf has many settings, that are beyond the scope of this setup ...

    sudo service postgresql start

    and there needs to be an /opt/khaospy/conf/database.json

    to generate one run the script :
        /opt/khaospy/bin/khaospy-db-conf-generate.pl

    This script is interactive, with default values.
    But you really should change the params :
        host
        password


################
sudo crontab -e
################

# make the daemons run on startup , and to keep try running them :
*/1  * * * * /opt/khaospy/bin/khaospy-run-daemons.pl         2>&1  > /dev/null

# keep the logs trimmed down to the last few days :
1 1 * * * find /opt/khaospy/log -type f -mtime +3 -delete 2>&1 > /dev/null


# Not sure about this, might generate rrd's as they're demanded.
# requires a lot of processing :
# */15 * * * * /opt/khaospy/bin/khaospy-generate-rrd-graphs.pl 2>&1  > /dev/null


log-rotate stuff :
##################
there's stuff in my install-to-pi-pi.bash scripts.


TODO Install from a github checkout :
    need to allow a checkout from github on a pi and then ansible up the install.


##################
# dhcp on piboiler
##################
# DON'T sudo vim /etc/network/interfaces for the static IP, that's not used in "Jessie" raspbian.

# assuming "jessie" distro of raspbian.( see above )
# add this lot to the end of the file ( without indenting )
# (although there isn't a wifi adapter on piboiler, and probably never will be)

sudo vim /etc/dhcpcd.conf

    interface eth0

    static ip_address=192.168.1.9/24
    static routers=192.168.1.254
    static domain_name_servers=192.168.1.14 192.168.1.8 192.168.1.254 8.8.8.8

    interface wlan0

    static ip_address=192.168.1.4/24
    static routers=192.168.1.254
    static domain_name_servers=192.168.1.14 192.168.1.8 192.168.1.254 8.8.8.8

------

http://www.noveldevices.co.uk/rp-dhcp-server
https://wiki.debian.org/DHCP_Server
https://help.ubuntu.com/community/isc-dhcp-server

sudo apt-get install isc-dhcp-server

dhcp conf file is ./dns/pitest-etc-dhcp-dhcpd.conf

####################


